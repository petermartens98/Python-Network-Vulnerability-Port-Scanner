import socket
import threading

def scan_port(host, port):
    """
    Scans a port on a host and returns True if the port is open, False otherwise.

    Args:
        host: The host to scan.
        port: The port to scan.

    Returns:
        True if the port is open, False otherwise.
    """

    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((host, port))
        if result == 0:
            return True
        return False
    except socket.error:
        return False

def scan_ports(host, start_port, end_port):
    """
    Scans a range of ports on a host and prints the open ports.

    Args:
        host: The host to scan.
        start_port: The starting port.
        end_port: The ending port.
    """

    print(f"Scanning ports on {host}...")
    threads = []
    for port in range(start_port, end_port + 1):
        thread = threading.Thread(target=scan_port, args=(host, port))
        thread.start()
        threads.append(thread)

    for thread in threads:
        thread.join()

    open_ports = []
    for port in range(start_port, end_port + 1):
        if scan_port(host, port):
            open_ports.append(port)

    for port in open_ports:
        print(f"Port {port} is open")

# Prompt the user to enter a target host
host = input("Enter the target host to scan: ")

# Prompt the user to enter the range of ports to scan
start_port = int(input("Enter the starting port: "))
end_port = int(input("Enter the ending port: "))

# Scan the ports on the target host
scan_ports(host, start_port, end_port)
